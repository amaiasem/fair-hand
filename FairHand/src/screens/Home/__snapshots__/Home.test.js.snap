// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a Connected React-Redux Home Component It should render with given state from Redux store 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "marginTop": 30,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "elevation": 4,
        "flexDirection": "row",
        "height": 50,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.23,
        "shadowRadius": 2.62,
        "width": 750,
      }
    }
  >
    <Image
      source={1}
      style={
        Object {
          "height": 40,
          "marginTop": 3,
          "width": 150,
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#fff",
        "borderBottomColor": "#A1A1A1",
        "borderBottomWidth": 1,
        "height": 130,
        "position": "absolute",
        "top": 50,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flexDirection": "row",
          "height": 80,
          "justifyContent": "center",
          "width": 750,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderBottomLeftRadius": 25,
            "borderBottomWidth": 1,
            "borderColor": "#A1A1A1",
            "borderLeftWidth": 1,
            "borderTopLeftRadius": 25,
            "borderTopWidth": 1,
            "height": 50,
            "justifyContent": "center",
            "width": 50,
          }
        }
      >
        <Text />
      </View>
      <TextInput
        allowFontScaling={true}
        collapsable={false}
        onChangeText={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        placeholder="Find a shop"
        rejectResponderTermination={true}
        style={
          Object {
            "backgroundColor": "#fff",
            "borderBottomRightRadius": 25,
            "borderBottomWidth": 1,
            "borderColor": "#A1A1A1",
            "borderRightWidth": 1,
            "borderTopRightRadius": 25,
            "borderTopWidth": 1,
            "fontSize": 18,
            "height": 50,
            "width": "80%",
          }
        }
        testID="input-shop"
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <RCTScrollView
      collapsable={false}
      horizontal={true}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      showsHorizontalScrollIndicator={false}
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
          "marginLeft": 10,
        }
      }
    >
      <View>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EDEDED",
                "borderRadius": 25,
                "fontSize": 14,
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 5,
                "opacity": 1,
                "paddingLeft": 20,
                "paddingRight": 20,
              }
            }
          >
            <Text>
              All
            </Text>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EDEDED",
                "borderRadius": 25,
                "fontSize": 14,
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 5,
                "opacity": 1,
                "paddingLeft": 20,
                "paddingRight": 20,
              }
            }
          >
            <Text>
              Clothes
            </Text>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EDEDED",
                "borderRadius": 25,
                "fontSize": 14,
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 5,
                "opacity": 1,
                "paddingLeft": 20,
                "paddingRight": 20,
              }
            }
          >
            <Text>
              Accessories
            </Text>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EDEDED",
                "borderRadius": 25,
                "fontSize": 14,
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 5,
                "opacity": 1,
                "paddingLeft": 20,
                "paddingRight": 20,
              }
            }
          >
            <Text>
              Shoes
            </Text>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EDEDED",
                "borderRadius": 25,
                "fontSize": 14,
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 5,
                "opacity": 1,
                "paddingLeft": 20,
                "paddingRight": 20,
              }
            }
          >
            <Text>
              Jewelry
            </Text>
          </View>
        </RNGestureHandlerButton>
      </View>
    </RCTScrollView>
  </View>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "marginBottom": 50,
        "marginTop": 140,
        "paddingBottom": 200,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
